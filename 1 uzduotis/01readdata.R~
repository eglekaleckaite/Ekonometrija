rm(list=ls())
library(plm)
library(reshape)
library(foreach)
library(ggplot2)
library(forecast)
Sys.setlocale(locale="lithuanian")

dt <- read.csv("imones5_8_2011_imones.csv")

dt.m <- subset(dt, grupe %in% 3)

melt.dt <- melt(dt.m, id.vars = c("nr", "grupe", "veikla", "ter",
                        "nace1", "nace2"))

time <- as.factor(aaply(as.matrix(melt.dt$variable), 1,
              function(ll) {
                date <- strsplit(as.character(ll), split = "_")[[1]][2]
                year.ll <- paste("20", gsub("[a-z]", "",
              date), sep = "")
                q.ll <- gsub("d", ".75",
                                        gsub("c", ".50",
                                             gsub("b", ".25",
                                                  gsub("a", ".00",
                                                       gsub("0[1-9]", "",
                                                            date)))))
                return(paste(year.ll, q.ll, sep = ""))
              }))

melt.dt$time <- time
melt.dt$variable <- aaply(as.matrix(melt.dt$variable), 1,
              function(ll) {
                date <- strsplit(as.character(ll), split = "_")[[1]][1]
              })

dt.fixed <- foreach(cc = unique(melt.dt$variable), .combine = cbind) %do% {
  rr <- data.frame(melt.dt[melt.dt$variable == cc, c("nr",
                             "time", "veikla", "grupe", "value")])
  names(rr) <- c("nr", "time", "veikla", "grupe",  cc)
  return(rr)
}

dt.old <- dt.fixed[, c("nr", "time", "veikla", "grupe")]


dt.new <- dt.fixed[, c("paj", "dsk", "val", "atlyg", "ter", "nace1", "nace2")]

add.dt <- cbind(dt.old, dt.new)

write.csv(add.dt, "reshaped.csv", row.names = F, na = "")

rm(list = ls())
#### Read fixed data ####
dat <- read.csv("reshaped.csv")
length(dat[is.na(dat)])
summary(dat)
prob <- problematic(dat, not = c("nr", "time", "veikla", "grupe",
                           "nice1", "nace2", "ter"))
nr <- length(unique(dat$nr))
problematic <- function(data, not){
   # Check data for negative, zero and NA values.
   # Arguments:
   # data : data.frame where first columns is Country, second -
   # Year and the rest colnames are variables.
   # Return:
   # res: data.frame with Country, Indicator, Problem and Year.
   # Problem contains "Empty", "Has na", "Has 0" and "Has < 0"
   #
  res <- foreach(cc = colnames(data)[!(colnames(data) %in% not)], .combine = rbind) %do%{
    indicator <- data[, c("nr", "time", cc)]
    prob <- foreach(C = unique(indicator$nr), .combine = rbind) %do% {
      gg <- subset(indicator, nr %in% C)

      if(all(is.na(gg[,ncol(gg)]))) {
        empty <- data.frame(nr = C, Indicator = cc,
                            Problem = "Empty", time = NA)
      } else {
        empty <- data.frame(nr = NULL, Indicator = NULL,
                              Problem = NULL, time = NULL)
      }

      has.zero <- data.frame(nr = NULL, Indicator = NULL,
                               Problem = NULL, time = NULL)
      has.na <- data.frame(nr = NULL, Indicator = NULL,
                             Problem = NULL, time = NULL)
      has.negative <- data.frame(nr = NULL, Indicator = NULL,
                                 Problem = NULL, time = NULL)

      if (nrow(empty) < 1){
        gg1 <- na.omit(gg)
        if (any(gg1[,ncol(gg1)] == 0))
          has.zero <- data.frame(nr = C, Indicator = cc,
                                 Problem = "Has 0", time =
                                 gg1[gg1[,ncol(gg1)] == 0,]$time)

        if (any(is.na(gg[,ncol(gg)])))
          has.na <- data.frame(nr = C, Indicator = cc,
                               Problem = "Has na", time =
                               gg[is.na(gg[,ncol(gg)]),]$time)

        if (any(gg1[,ncol(gg1)] < 0)&&cc!="Inflation")
          has.negative <- data.frame(nr = C, Indicator = cc,
                                     Problem = "Has < 0", time =
                                     gg1[gg1[,ncol(gg1)] < 0,]$time)

      }
      return(rbind(empty, has.zero, has.na, has.negative))
    }
  }
  return(res)
}
prob <- problematic(dat, not = c("nr", "time", "veikla", "grupe",
                           "nice1", "nace2", "ter", "dsk", "atlyg", "paj"))
empty <- subset(prob, Problem == "Empty")$nr


is.dt <- subset(dat, !(nr %in% empty))
summary(is.dt)
is.dt <- sort_df(is.dt, vars = c("nr", "time"))
write.csv(is.dt, "is_dt.csv", row.names = F, na = "")

m.dat <- melt(is.dt, id=c(1:4,9:11))


dt.plot <- foreach(var = c("paj", "dsk", "val", "atlyg")) %do% {
  dd <- subset(m.dat, variable == var)
  foreach(C = unique(dd$nr)) %do% {
    dt.c <- subset(dd, nr == C)
    qplot(time, value, data = dt.c,
          geom = "line", main = paste(var, C))+
            scale_x_continuous("Laikas")+
            scale_y_continuous("")+scale_color_hue("Legenda")
  }
}

pdf("all_ind.pdf", onefile = TRUE, height = 5, width = 10)
print(dt.plot)
dev.off()


### IS data
is.dt <- read.csv("is_dt.csv")
#source("10code.R")

fm <- formula(val~t+atlyg+ter+nace2)

fitted.plm <- function(obj, data) {
  coefs <- obj$coef
  
  fit <- as.matrix(cbind(1, data[, names(coefs)[-1]])) %*% coefs
  fit.df <- data.frame(data[, c("nr", "time")], fitted = fit)
  return(fit.df)
}
is.dt$t <- as.numeric(is.dt$time)

model.data <- subset(is.dt, !(time %in% c(2008.00, 2008.25, 2008.50,
                                          2008.75)))
## dt.dm <- foreach(ter = na.omit(unique(is.dt$ter)), .combine = cbind) %do% {
##   dd <- is.dt$ter
##   dd[dd != ter] <- 0
##   dd[dd == ter] <- 1
##   return(dd)
## }
## dt.dm[is.na(dt.dm)] <- 0
## colnames(dt.dm) <- paste("ter", na.omit(unique(is.dt$ter)), sep = "")

## fm1 <- formula(paste("val~atlyg+nace1+nace2+",paste(colnames(dt.dm),
##                                               collapse = "+")))
## dt.dm <- data.frame(is.dt, dt.dm)
####################### POOLING #############################################
plm.dt1 <- plm(fm, model.data, effect = "individual",
                                  model = "pooling")
smm.dt1 <- summary(plm.dt1)

#smr <- my.summary(fm, is.dt)
#pred <- forecast(plm.dt, data = is.dt[, c("atlyg", "ter", "nace1", "nace2")])

#fe <- plm:::fixef.plm(plm.dt)
#mr <- plm:::pmodel.response(plm.dt)

fit.my1 <- plm:::fitted.plm(plm.dt1)

fitted1 <- fitted.plm(plm.dt1, is.dt)

forecasts1 <- subset(fitted1, time %in% c(2008.00, 2008.25, 2008.50,
                                  2008.75))
##############################################################################
errors <- na.omit(data.frame(forecasts1[, -3], Valandos = subset(is.dt,
                                                 time %in% c(2008.00, 2008.25, 2008.50,
                                                             2008.75))$val,
                             Prognoze = forecasts1[, 3],
                             Paklaida = (subset(is.dt,
                                             time %in% c(2008.00, 2008.25, 2008.50,
                                                         2008.75))$val-forecasts1$fitted)))

m.errors <- melt(errors, id = c("nr", "time"))
m.errors$ID <- m.errors$variable
m.errors$ID <- gsub("Valandos", "Valandos", m.errors$ID)
m.errors$ID <- gsub("Prognoze", "Valandos", m.errors$ID)
m.errors$variable <- gsub("Prognoze", "Prognozë", m.errors$variable)
m.errors$ID <- gsub("Paklaida", "Skirtumas", m.errors$ID)
error.plot <- foreach(var = unique(m.errors$nr)) %do% {
  dd <- subset(m.errors, nr == var)
  pp <- qplot(time, value, data = dd, geom = "line", colour = variable,
              main = paste("Ámonës numeris", var))+
          facet_wrap(~ID, ncol = 1)+scale_x_continuous("Laikas")+
            scale_y_continuous("Valandos")+scale_color_hue("Legenda")
  return(pp)
}

pdf("Valandos_prognoze_skirtumas.pdf", onefile = TRUE, height = 5, width = 10)
print(error.plot)
dev.off()

##############################################################################
# With seasonal dummies
##############################################################################

dt.dm <- foreach(seas = c(0.25, 0.5, 0.75), .combine = cbind) %do% {
  dd <- is.dt$time - trunc(is.dt$time)
  dd[dd != seas] <- 0
  dd[dd == seas] <- 1
  return(dd)
}
colnames(dt.dm) <- paste("s", 2:4, sep = "")

dt.dm <- data.frame(is.dt, dt.dm)

fm.s <- formula(val~t+atlyg+ter+nace2+s2+s3+s4)

model.data1 <- subset(dt.dm, !(time %in% c(2008.00, 2008.25, 2008.50,
                                          2008.75)))

plm.dt.s <- plm(fm.s, model.data1, effect = "individual",
                                  model = "pooling")
smm.dt.s <- summary(plm.dt.s)

##############################################################################
# Pratrinam dar labiau duomenis
##############################################################################

prob <- problematic(model.data, not = c("nr", "time", "veikla", "grupe",
                           "nice1", "nace2", "ter", "dsk", "atlyg", "paj"))
empty <- subset(prob, Problem == "Empty")$nr

short <- ddply(prob, ~nr, function(bb) {
  if(nrow(subset(bb, Problem == "Has na")) > 8) return(bb)
  else return(NULL)
  })

short.nr <- unique(short$nr)
  
is.dt.n <- subset(is.dt, !(nr %in% empty))
summary(is.dt.n)
is.dt.n <- sort_df(is.dt.n, vars = c("nr", "time"))
write.csv(is.dt.n, "is_dt_new.csv", row.names = F, na = "")

is.dt.n <- read.csv("is_dt_new.csv")

const <- ddply(is.dt.n, ~nr, function(bb) {
  if((length(unique(na.omit(bb$val))) == 1)&&(length(na.omit(bb$val)))
  > 1) return(bb)
  else return(NULL)
  })

const.nr <- unique(const$nr)

left <- subset(is.dt.n, !(nr %in% const.nr))

## Model
fm.l <- formula(val~t+atlyg+ter+nace2)

model.data2 <- subset(is.dt.n, !(time %in% c(2008.00, 2008.25, 2008.50,
                                          2008.75)))

plm.dt.l <- plm(fm.l, model.data2, effect = "individual",
                                  model = "pooling")
smm.dt.l <- summary(plm.dt.l)

### statistikos nepagerejo, trinam toliau

long <- subset(left, !(nr %in% short.nr))

m.dat <- melt(long, id=c(1:4,9:11))


dt.plot <- foreach(var = "val") %do% {
  dd <- subset(m.dat, variable == var)
  foreach(C = unique(dd$nr)) %do% {
    dt.c <- subset(dd, nr == C)
    qplot(time, value, data = dt.c,
          geom = "line", main = paste(var, C))+
            scale_x_continuous("Laikas")+
            scale_y_continuous("Valandos")+scale_color_hue("Legenda")
  }
}

pdf("valandos_long.pdf", onefile = TRUE, height = 5, width = 10)
print(dt.plot)
dev.off()

### NA fill
long.na <- as.data.frame(na.spline(subset(long, !(time %in% c(2008.00, 2008.25, 2008.50,
                                          2008.75)))))

m.long <- melt(long, id=c(1:4,9:11))
m.dat <- melt(long.na, id=c(1:4,9:11))

dt.plot <- foreach(var = "val") %do% {
  dd <- data.frame(subset(m.dat, variable == var), Color = "Filled")
  dl <- data.frame(subset(m.long, variable == var), Color = "Real")
  duom <- rbind(dd, dl)
  foreach(C = unique(duom$nr)) %do% {
    dt.c <- subset(duom, nr == C)
    qplot(time, value, data = dt.c,
          geom = "line", main = paste(var, C), color = Color)+
            scale_x_continuous("Laikas")+
            scale_y_continuous("Valandos")+scale_color_hue("Legenda")
  }
}

pdf("valandos_long_na.pdf", onefile = TRUE, height = 5, width = 10)
print(dt.plot)
dev.off()

##############################################################################
# Groups by size (dsk)
##############################################################################

